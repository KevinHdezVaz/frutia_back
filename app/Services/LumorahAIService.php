<?php

namespace App\Services;

use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Str;

// RECOMENDACI√ìN: Renombrar la clase y el archivo a FrutiaAIService.php
class FrutiaAIService
{
    private $userName;
    private $userLanguage;
    private $detectedTopic = 'general';
    private $supportedLanguages = ['es', 'en', 'fr', 'pt'];

    public function __construct($userName = null, $language = 'es')
    {
        $this->userName = $userName ? Str::title(trim($userName)) : null;
        $this->userLanguage = in_array($language, $this->supportedLanguages) ? $language : 'es';
        Log::info('FrutiaAIService initialized with userName:', ['userName' => $this->userName]);
    }

    public function setUserName($name)
    {
        $this->userName = $name ? Str::title(trim($name)) : null;
    }

    public function getWelcomeMessage()
    {
        $welcomeEmoji = $this->getWelcomeEmoji();
        return $this->userName
            ? $this->getPersonalizedGreeting($this->userName, $welcomeEmoji)
            : $this->getAnonymousGreeting($welcomeEmoji);
    }
    
    // --- NUEVAS FUNCIONES PARA AN√ÅLISIS DE TEMA ---

    /**
     * Analiza el mensaje del usuario para detectar un tema espec√≠fico.
     */
    private function analyzeUserInput($message)
    {
        $message = strtolower($message);
        $topics = $this->getTopicKeywords();

        foreach ($topics as $topic => $keywords) {
            if ($this->containsAny($message, $keywords)) {
                $this->detectedTopic = $topic;
                Log::info('Topic detected:', ['topic' => $topic]);
                return; // Detenerse en el primer tema que coincida
            }
        }

        // Si no se encuentra ning√∫n tema, se queda como 'general'
        $this->detectedTopic = 'general';
    }

    /**
     * Define las palabras clave para cada tema de nutrici√≥n.
     */
    private function getTopicKeywords()
    {
        return [
            'weight_loss' => ['perder peso', 'bajar de peso', 'adelgazar', 'bajar kilos', 'quemar grasa'],
            'muscle_gain' => ['aumentar m√∫sculo', 'ganar masa muscular', 'crecer', 'prote√≠na para', 'gym'],
            'energy_boost' => ['m√°s energ√≠a', 'estoy cansado', 'fatiga', 'sin fuerzas', 'baj√≥n'],
            'healthy_eating' => ['comer m√°s sano', 'comer mejor', 'alimentaci√≥n saludable', 'dieta balanceada', 'recetas'],
            'cravings' => ['antojos', 'ansiedad por comer', 'ganas de dulce', 'controlar el hambre'],
            'hydration' => ['beber agua', 'hidrataci√≥n', 'cu√°nta agua', 'estar hidratado'],
        ];
    }
    
    /**
     * Devuelve las instrucciones espec√≠ficas para la IA seg√∫n el tema detectado.
     */
    private function getTopicInstructions()
    {
        $instructions = [
            'general' => "Ofrece consejos generales sobre bienestar y alimentaci√≥n balanceada. Anima al usuario a ser m√°s espec√≠fico si lo desea.",
            'weight_loss' => "Enf√≥cate en el d√©ficit cal√≥rico sostenible, no en dietas milagro. Sugiere intercambios de alimentos inteligentes (ej: yogur griego por aderezos), y destaca la importancia de la prote√≠na y la fibra para sentirse lleno. Promueve la paciencia y la constancia.",
            'muscle_gain' => "Habla sobre la importancia de un super√°vit cal√≥rico moderado y la ingesta adecuada de prote√≠nas (ej: 1.6-2.2g por kg de peso). Sugiere fuentes de prote√≠na magra y carbohidratos complejos para energ√≠a en los entrenamientos.",
            'energy_boost' => "Explica la diferencia entre energ√≠a r√°pida (az√∫cares) y sostenida (carbohidratos complejos + fibra). Recomienda snacks que combinen fibra, prote√≠na y grasas saludables. Menciona la hidrataci√≥n como factor clave.",
            'healthy_eating' => "Ofrece ideas sencillas para incorporar m√°s vegetales y frutas en el d√≠a a d√≠a. Habla sobre la planificaci√≥n de comidas (meal prep) y da ejemplos de platos balanceados siguiendo el m√©todo del plato de Harvard (50% vegetales, 25% prote√≠na, 25% carbohidratos).",
            'cravings' => "Valida el antojo sin juzgar. Explica las posibles causas (h√°bito, falta de nutrientes, deshidrataci√≥n). Ofrece alternativas m√°s saludables para satisfacer el antojo (ej: fruta o chocolate negro para el dulce) y estrategias como esperar 15 minutos o beber agua primero.",
            'hydration' => "Explica los beneficios de estar bien hidratado (energ√≠a, piel, digesti√≥n). Recomienda una ingesta general (ej: 2-3 litros) pero aclarando que var√≠a por persona. Da trucos para beber m√°s agua, como usar botellas con marcador o a√±adirle sabores naturales como lim√≥n o menta."
        ];

        return $instructions[$this->detectedTopic] ?? $instructions['general'];
    }

    /**
     * Funci√≥n de ayuda para buscar palabras clave en un texto.
     */
    private function containsAny($text, $keywords)
    {
        foreach ($keywords as $keyword) {
            if (stripos($text, $keyword) !== false) {
                return true;
            }
        }
        return false;
    }

    // --- FIN DE LAS NUEVAS FUNCIONES ---

    public function generatePrompt($userMessage)
    {
        // Se a√±ade la llamada para analizar el mensaje antes de crear el prompt
        $this->analyzeUserInput($userMessage);

        $userName = $this->userName ?: '';
        $systemPrompt = $this->buildSystemPrompt($userName);

        return [
            'system_prompt' => $systemPrompt,
            'user_prompt' => $userMessage,
            'topic' => $this->detectedTopic,
            'language' => $this->userLanguage,
        ];
    }
    
    public function generateVoicePrompt($userMessage)
    {
        // Se a√±ade tambi√©n aqu√≠ para el chat de voz
        $this->analyzeUserInput($userMessage);

        $userName = $this->userName ?: '';
        $systemPrompt = $this->buildSystemVoicePrompt($userName);

        return [
            'system_prompt' => $systemPrompt,
            'user_prompt' => $userMessage,
            'topic' => $this->detectedTopic,
            'language' => $this->userLanguage,
        ];
    }

    public function callOpenAI($userMessage, $systemPrompt, $context = [])
    {
        $messages = [['role' => 'system', 'content' => $systemPrompt]];

        foreach ($context as $msg) {
            $messages[] = ['role' => $msg['is_user'] ? 'user' : 'assistant', 'content' => $msg['text']];
        }

        $messages[] = ['role' => 'user', 'content' => $userMessage];

        try {
            $response = Http::withHeaders([
                'Authorization' => 'Bearer ' . env('OPENAI_API_KEY'),
                'Content-Type' => 'application/json',
            ])->post('https://api.openai.com/v1/chat/completions', [
                'model' => 'gpt-4o-mini',
                'messages' => $messages,
                'max_tokens' => 800,
                'temperature' => 0.6,
                'top_p' => 0.9,
            ]);
        
            if ($response->successful()) {
                return $response->json()['choices'][0]['message']['content'] ?? '';
            }
        
            Log::error('OpenAI API request failed', ['status' => $response->status(), 'body' => $response->body()]);
            return $this->getDefaultResponse();

        } catch (\Exception $e) {
            Log::error('OpenAI API exception', ['message' => $e->getMessage()]);
            return $this->getDefaultResponse();
        }
    }

    private function buildSystemPrompt($userName)
    {
        $name = $userName ? ", $userName" : "";
        // Esta llamada ahora funcionar√° porque la funci√≥n ya existe
        $topicInstructions = $this->getTopicInstructions();

        return <<<PROMPT
# PERSONALIDAD
Eres Frutia, un nutri-coach personal con IA. Tu tono es amigable, motivador y positivo. Usas un lenguaje sencillo y claro, basado en ciencia de la nutrici√≥n, pero sin ser t√©cnico. Eres como unx amigx expertx que apoya y gu√≠a. Usas emojis de frutas y vegetales (üçé, ü•ó, üíß, üí™) para hacer la conversaci√≥n m√°s visual y amena.

# INSTRUCCIONES CLAVE
1.  **Saludo Inicial**: Siempre saluda de forma c√°lida. Si conoces el nombre del usuario, √∫salo. Ej: "¬°Hola$name! Qu√© bueno verte por aqu√≠ üçé".
2.  **Enfoque y Objetivo**: Tu meta es ayudar al usuario a construir una relaci√≥n m√°s sana con la comida y alcanzar sus objetivos de bienestar.
3.  **Estructura de Respuesta**:
    - **Validaci√≥n**: Reconoce la pregunta o el sentimiento del usuario. ("Entiendo, es muy com√∫n querer m√°s energ√≠a por la tarde...").
    - **Informaci√≥n Clara**: Proporciona informaci√≥n √∫til y basada en evidencia.
    - **Consejos Pr√°cticos**: Ofrece 2-3 consejos claros y accionables, preferiblemente en una lista con guiones o emojis.
    - **Motivaci√≥n**: Cierra con una frase de √°nimo. ("¬°T√∫ puedes con esto!", "Cada peque√±o cambio cuenta").
    - **Pregunta Abierta**: Termina con una pregunta para fomentar la conversaci√≥n.
4.  **Instrucciones Espec√≠ficas por Tema (T√≥pico actual: {$this->detectedTopic})**:
    {$topicInstructions}
5.  **DISCLAIMER DE SEGURIDAD (¬°MUY IMPORTANTE!)**:
    - **NO eres un m√©dico**. Nunca diagnostiques enfermedades ni prescribas dietas para condiciones m√©dicas.
    - Si el usuario menciona una condici√≥n m√©dica, tu respuesta DEBE incluir una recomendaci√≥n de consultar a un m√©dico o nutricionista profesional. Ej: "Para tu caso espec√≠fico, lo mejor es que un m√©dico o nutricionista te d√© un plan personalizado. Mi consejo es de car√°cter general."
    - No hagas promesas extremas. Enf√≥cate en h√°bitos sostenibles.

# EJEMPLO DE RESPUESTA IDEAL (Usuario: "estoy sin energ√≠a por las tardes")
¬°Hola$name! ‚òÄÔ∏è Entiendo perfectamente, esa ca√≠da de energ√≠a por la tarde es s√∫per com√∫n. Suele estar relacionada con lo que comemos al mediod√≠a.

Para mantener tu motor funcionando a tope, aqu√≠ tienes un par de ideas:
üçé **A√±ade prote√≠na y fibra en tu almuerzo**: Un poco de pollo, lentejas o quinoa junto a una buena ensalada ayudan a que la energ√≠a se libere m√°s despacio. ¬°Adi√≥s al baj√≥n!
üíß **Hidr√°tate bien**: A veces, la fatiga es solo sed disfrazada. Aseg√∫rate de beber suficiente agua durante el d√≠a.
üí™ **Elige un snack inteligente**: Si necesitas un empuj√≥n, una fruta con un pu√±ado de almendras es mucho mejor que algo azucarado.

Recuerda que cada cuerpo es un mundo, pero estos peque√±os cambios suelen hacer una gran diferencia. ¬°Vamos a intentarlo!

¬øCu√°l de estos tips te parece m√°s f√°cil de aplicar en tu d√≠a a d√≠a?

**Comienza la conversaci√≥n ahora:**
PROMPT;
    }
    
    // ... aqu√≠ ir√≠an el resto de tus funciones como getPersonalizedGreeting, getDefaultResponse, etc. ...
    // Aseg√∫rate de que est√©n todas presentes. Las dejo fuera por brevedad, pero deben estar en tu archivo.
    
    public function getDefaultResponse() { /* ... tu c√≥digo ... */ return "¬°Uy! Parece que se me cay√≥ una manzana en el sistema üçé. Hubo un peque√±o error, pero ¬øpodr√≠as repetirme tu pregunta?"; }
    private function getPersonalizedGreeting($userName, $emoji) { /* ... tu c√≥digo ... */ return "Hola $userName, soy Frutia $emoji"; }
    private function getAnonymousGreeting($emoji) { /* ... tu c√≥digo ... */ return "Hola, soy Frutia $emoji"; }
    private function getWelcomeEmoji() { /* ... tu c√≥digo ... */ $emojis = ['üçé', 'üå±', 'üí™', '‚ú®']; return $emojis[array_rand($emojis)];}
    public function formatVoiceResponse($content) { /* ... tu c√≥digo ... */ return preg_replace('/\s+/', ' ', preg_replace('/[‚Ä¢‚ñ™‚ô¶‚ñ∂-]/u', '', preg_replace('/[\x{1F600}-\x{1F64F}|\x{1F300}-\x{1F5FF}|\x{1F900}-\x{1F9FF}|\x{2600}-\x{26FF}|\x{2700}-\x{27BF}]/u', '', preg_replace('/[\*\_]/', '', $content))));}
    private function buildSystemVoicePrompt($userName) { /* ... tu c√≥digo ... */ return "Eres Frutia, un nutri-coach amigable...";}
    public function getUserName() { /* ... tu c√≥digo ... */ return $this->userName;}
    public function getUserLanguage() { /* ... tu c√≥digo ... */ return $this->userLanguage;}

}